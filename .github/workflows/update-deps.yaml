name: Update Dependencies
run-name: Update Dependencies
on:
  schedule:
    - cron: "0 0 * * *"
jobs:
  update_deps:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.PR_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: mlugg/setup-zig@v1
      - name: Update Limine Binaries
        run: |
          REPO=limine-bootloader/limine
          json=$(gh api -H "Accept: application/vnd.github+json" \
                   -H "X-GitHub-Api-Version: 2022-11-28" \
                   /repos/$REPO/tags?per_page=2 | \
            jq '.[] | select(.name|endswith("-binary"))')
          out=$(zig fetch --save=limine_bin $(echo $json | jq -r '.zipball_url'))
          if [[ $out != *"up-to-date"* ]]; then
            echo "Updated $REPO to [latest tag]($GITHUB_SERVER_URL/$REPO/commit/$(echo $json | jq -r '.commit.sha'))" >> ${{ runner.temp }}/pr-body.txt
          fi
      - name: Update limine-zig
        run: |
          REPO=48cf/limine-zig
          json=$(gh api -H "Accept: application/vnd.github+json" \
                        -H "X-GitHub-Api-Version: 2022-11-28" \
                        /repos/$REPO/commits?per_page=1 | \
                 jq '.[0]')
          out=$(zig fetch --save=limine_zig $GITHUB_API_URL/repos/$REPO/zipball/$(echo $json | jq -r '.sha'))
          if [[ $out != *"up-to-date"* ]]; then
            echo "Updated $REPO to [latest commit]($(echo $json | jq -r '.html_url'))" >> ${{ runner.temp }}/pr-body.txt
          fi
      - name: Update uACPI
        run: |
          REPO=uACPI/uACPI
          json=$(gh api -H "Accept: application/vnd.github+json" \
                        -H "X-GitHub-Api-Version: 2022-11-28" \
                        /repos/$REPO/commits?per_page=1 | \
                 jq '.[0]')
          out=$(zig fetch --save=uacpi $GITHUB_API_URL/repos/$REPO/zipball/$(echo $json | jq -r '.sha'))
          if [[ $out != *"up-to-date"* ]]; then
            echo "Updated $REPO to [latest commit]($(echo $json | jq -r '.html_url'))" >> ${{ runner.temp }}/pr-body.txt
          fi
      - name: Update SSFN
        run: |
          REPO=bztsrc/scalable-font2
          PROJECT_ID=18860409 # bztsrc/scalable-font2 project id
          json=$(curl --url https://gitlab.com/api/v4/projects/$PROJECT_ID/repository/commits | jq -r '.[0]')
          out=$(zig fetch --save=ssfn https://gitlab.com/api/v4/projects/$PROJECT_ID/repository/archive.zip?sha=$(echo $json | jq -r '.id'))
          if [[ $out != *"up-to-date"* ]]; then
            echo "Updated $REPO to [latest commit]($(echo $json | jq -r '.web_url'))" >> ${{ runner.temp }}/pr-body.txt
          fi
      - name: Check PR Body
        uses: andstor/file-existence-action@v3
        id: check-pr
        with:
          files: "${{ runner.temp }}/pr-body.txt"
          ignore_case: false
          follow_symbolic_links: false
      - name: Create PR
        if: steps.check-pr.outputs.files_exists == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          title: "[bot] Update dependencies"
          body-path: ${{ runner.temp }}/pr-body.txt
          commit-message: "[bot] Update dependencies"
          branch: update-deps
          token: ${{ secrets.PR_TOKEN }}
          delete-branch: true
